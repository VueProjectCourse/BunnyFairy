import{_ as n,c as s,o as a,a as p}from"./app.ba9c527d.js";const d='{"title":"\u767B\u5F55-\u624B\u673A\u53F7\u767B\u5F55-\u767B\u5F55","description":"","frontmatter":{},"headers":[],"relativePath":"login/phone-login.md"}',t={},o=p(`<h1 id="\u767B\u5F55-\u624B\u673A\u53F7\u767B\u5F55-\u767B\u5F55" tabindex="-1">\u767B\u5F55-\u624B\u673A\u53F7\u767B\u5F55-\u767B\u5F55 <a class="header-anchor" href="#\u767B\u5F55-\u624B\u673A\u53F7\u767B\u5F55-\u767B\u5F55" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">\u76EE\u6807</p><p>\u8FD9\u4E00\u5C0F\u8282\uFF0C\u6211\u4EEC\u7684\u76EE\u6807\u662F \u5B9E\u73B0\u4F7F\u7528\u624B\u673A\u53F7\u8FDB\u884C\u767B\u5F55</p></div><div class="warning custom-block"><p class="custom-block-title">\u6B65\u9AA4</p><ol><li>\u521B\u5EFA\u7528\u4E8E\u5B9E\u73B0\u624B\u673A\u53F7\u767B\u5F55\u7684API\u63A5\u53E3\u51FD\u6570</li><li>\u5B9E\u73B0\u9A8C\u8BC1\u7801\u767B\u5F55</li></ol></div><div class="info custom-block"><p class="custom-block-title">\u4F53\u9A8C</p><ul><li><strong>Step.1\uFF1A\u521B\u5EFA\u7528\u4E8E\u5B9E\u73B0\u624B\u673A\u53F7\u767B\u5F55\u7684API\u63A5\u53E3\u51FD\u6570</strong></li></ul><div class="language-js line-numbers-mode"><pre><code><span class="token comment">/**
 * \u624B\u673A\u53F7\u767B\u5F55
 * @param mobile \u624B\u673A\u53F7
 * @param code \u9A8C\u8BC1\u7801
 * @return {AxiosPromise}
 */</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">loginByMobileMsgCode</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> mobile<span class="token punctuation">,</span> code <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">return</span> request<span class="token punctuation">.</span><span class="token function">post</span><span class="token punctuation">(</span><span class="token string">&quot;/login/code&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> mobile<span class="token punctuation">,</span> code <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><ul><li><strong>Step.2\uFF1A\u5B9E\u73B0\u9A8C\u8BC1\u7801\u767B\u5F55</strong></li></ul><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">useMobileLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> router <span class="token operator">=</span> <span class="token function">useRouter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">// \u8BF7\u6C42\u6210\u529F\u65F6\u7684\u56DE\u8C03</span>
  <span class="token keyword">const</span> <span class="token function-variable function">successFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> <span class="token literal-property property">data</span><span class="token operator">:</span> res<span class="token punctuation">,</span> <span class="token literal-property property">status</span><span class="token operator">:</span> status <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> <span class="token punctuation">{</span> profile <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">storeToRefs</span><span class="token punctuation">(</span><span class="token function">useUserStore</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">===</span> <span class="token number">200</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token comment">// \u628A\u7528\u6237\u4FE1\u606F\u5B58\u50A8\u5230Store\u4E2D</span>
      profile<span class="token punctuation">.</span>value <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token operator">...</span>profile<span class="token punctuation">.</span>value<span class="token punctuation">,</span> <span class="token operator">...</span>res<span class="token punctuation">.</span>result <span class="token punctuation">}</span><span class="token punctuation">;</span>
      <span class="token comment">// // \u5224\u65AD\u767B\u9646\u6210\u529F \u8DF3\u8F6C\u5230\u9996\u9875</span>
      router<span class="token punctuation">.</span><span class="token function">push</span><span class="token punctuation">(</span><span class="token string">&quot;/&quot;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// \u767B\u5F55\u6210\u529F\u4E4B\u540E\u7684\u63D0\u793A\u4FE1\u606F</span>
        <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;success&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> <span class="token string">&quot;\u767B\u5F55\u6210\u529F&quot;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token comment">// \u767B\u9646\u5931\u8D25\u65F6\u7684\u56DE\u8C03</span>
  <span class="token keyword">const</span> <span class="token function-variable function">failFn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">// console.log(error.response.data.message);</span>
    <span class="token function">Message</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;error&quot;</span><span class="token punctuation">,</span> <span class="token literal-property property">text</span><span class="token operator">:</span> error<span class="token punctuation">.</span>response<span class="token punctuation">.</span>data<span class="token punctuation">.</span>message <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token function-variable function">setMobileLogin</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter"><span class="token punctuation">{</span> mobile<span class="token punctuation">,</span> code <span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">loginByMobileMsgCode</span><span class="token punctuation">(</span><span class="token punctuation">{</span> mobile<span class="token punctuation">,</span> code <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>successFn<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>failFn<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token punctuation">{</span> setMobileLogin <span class="token punctuation">}</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br></div></div></div><div class="danger custom-block"><p class="custom-block-title">\u603B\u7ED3</p><ul><li>\u3010\u91CD\u70B9\u3011</li><li>\u3010\u96BE\u70B9\u3011</li><li>\u3010\u6CE8\u610F\u70B9\u3011</li></ul></div>`,5),e=[o];function c(l,u,r,i,k,b){return a(),s("div",null,e)}var g=n(t,[["render",c]]);export{d as __pageData,g as default};
